import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

class Bus {
    private String busNumber;
    private String source;
    private String destination;
    private int totalSeats;
    private int availableSeats;

    public Bus(String busNumber, String source, String destination, int totalSeats) {
        this.busNumber = busNumber;
        this.source = source;
        this.destination = destination;
        this.totalSeats = totalSeats;
        this.availableSeats = totalSeats;
    }

    public String getBusNumber() {
        return busNumber;
    }

    public String getSource() {
        return source;
    }

    public String getDestination() {
        return destination;
    }

    public int getTotalSeats() {
        return totalSeats;
    }

    public int getAvailableSeats() {
        return availableSeats;
    }

    public boolean reserveSeats(int seats) {
        if (seats <= availableSeats) {
            availableSeats -= seats;
            return true;
        }
        return false;
    }

    public void display() {
        System.out.println("Bus Number: " + busNumber);
        System.out.println("Source: " + source);
        System.out.println("Destination: " + destination);
        System.out.println("Total Seats: " + totalSeats);
        System.out.println("Available Seats: " + availableSeats);
    }
}

class Ticket {
    private static int ticketCounter = 1;
    private int ticketNumber;
    private Bus bus;
    private String passengerName;
    private int numberOfSeats;

    public Ticket(Bus bus, String passengerName, int numberOfSeats) {
        this.ticketNumber = ticketCounter++;
        this.bus = bus;
        this.passengerName = passengerName;
        this.numberOfSeats = numberOfSeats;
    }

    public int getTicketNumber() {
        return ticketNumber;
    }

    public Bus getBus() {
        return bus;
    }

    public String getPassengerName() {
        return passengerName;
    }

    public int getNumberOfSeats() {
        return numberOfSeats;
    }

    public void display() {
        System.out.println("Ticket Number: " + ticketNumber);
        System.out.println("Passenger Name: " + passengerName);
        System.out.println("Bus Details:");
        bus.display();
        System.out.println("Number of Seats: " + numberOfSeats);
    }
}

class BusTicketReservationSystem {
    private List<Bus> buses;
    private List<Ticket> tickets;

    public BusTicketReservationSystem() {
        buses = new ArrayList<>();
        tickets = new ArrayList<>();
    }

    public void addBus(Bus bus) {
        buses.add(bus);
    }

    public void reserveTicket(Bus bus, String passengerName, int numberOfSeats) {
        boolean success = bus.reserveSeats(numberOfSeats);
        if (success) {
            Ticket ticket = new Ticket(bus, passengerName, numberOfSeats);
            tickets.add(ticket);
            System.out.println("Ticket reserved successfully!");
            System.out.println("Ticket Details:");
            ticket.display();
        } else {
            System.out.println("Failed to reserve ticket. Not enough available seats.");
        }
    }

    public void displayAvailableBuses() {
        System.out.println("Available Buses:");
        for (Bus bus : buses) {
            if (bus.getAvailableSeats() > 0) {
                bus.display();
                System.out.println();
            }
        }
    }

    public void displayAllTickets() {
        System.out.println("All Tickets:");
        for (Ticket ticket : tickets) {
            ticket.display();
            System.out.println();
        }
    }

        public List<Bus> getBuses() {
        return buses;
    }
}

public class Main {
    public static void main(String[] args) {
        BusTicketReservationSystem reservationSystem = new BusTicketReservationSystem();

        // Adding buses to the reservation system
        Bus bus1 = new Bus("B001", "City A", "City B", 50);
        Bus bus2 = new Bus("B002", "City B", "City C", 40);
        reservationSystem.addBus(bus1);
        reservationSystem.addBus(bus2);

        Scanner scanner = new Scanner(System.in);
        int choice;
        do {
            System.out.println("----- BUS TICKET RESERVATION SYSTEM -----");
            System.out.println("1. Display available buses");
            System.out.println("2. Reserve a ticket");
            System.out.println("3. Display all tickets");
            System.out.println("0. Exit");
            System.out.print("Enter your choice: ");
            choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    reservationSystem.displayAvailableBuses();
                    break;
                case 2:
                    System.out.print("Enter the bus number: ");
                    String busNumber = scanner.next();
                    Bus selectedBus = null;
                    for (Bus bus : reservationSystem.getBuses()) {
                        if (bus.getBusNumber().equals(busNumber)) {
                            selectedBus = bus;
                            break;
                        }
                    }
                    if (selectedBus != null) {
                        System.out.print("Enter passenger name: ");
                        String passengerName = scanner.next();
                        System.out.print("Enter the number of seats to reserve: ");
                        int numberOfSeats = scanner.nextInt();
                        reservationSystem.reserveTicket(selectedBus, passengerName, numberOfSeats);
                    } else {
                        System.out.println("Invalid bus number.");
                    }
                    break;
                case 3:
                    reservationSystem.displayAllTickets();
                    break;
                case 0:
                    System.out.println("Thank you for using the Bus Ticket Reservation System!");
                    break;
                default:
                    System.out.println("Invalid choice. Please try again.");
                    break;
            }
            System.out.println();
        } while (choice != 0);

        scanner.close();
    }
}

